# This is a basic workflow to help you get started with Actions
name: build
on:
  pull_request:
  push:
    branches: [ master, dev, dev_ci ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'

jobs:
  dev-linux-noros-noviz3d:
    runs-on: ubuntu-18.04
    env:
      CC: gcc-9
      CXX: g++-9
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev gcc-multilib g++-multilib libfreetype6-dev libvulkan-dev freeglut3-dev libxrandr-dev libglfw3-dev
      - name: Install the superbuild
        run: |
          mkdir .cmake-build-superbuild && cd .cmake-build-superbuild
          cmake ../superbuild
          cmake --build . --config Release
      - name: Install CT-ICP
        run: |
          mkdir cmake-build-release && cd cmake-build-release
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target install --config Release --parallel 12

  dev-linux-noros-noviz3d-ubuntu-20-gcc11:
    runs-on: ubuntu-20.04
    env:
      CC: gcc-11
      CXX: g++-11
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get install -y libsdl2-dev gcc-11-multilib g++-11-multilib libfreetype6-dev libvulkan-dev freeglut3-dev libxrandr-dev libglfw3-dev
      - name: Install the superbuild
        run: |
          mkdir .cmake-build-superbuild && cd .cmake-build-superbuild
          cmake ../superbuild
          cmake --build . --config Release
      - name: Install CT-ICP
        run: |
          mkdir cmake-build-release && cd cmake-build-release
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target install --config Release --parallel 12
      - name: Run Tests
        run: |
          ./install/CT_ICP/test/all_tests
  
  dev-linux-withros-without-viz3d-ubuntu-18-gcc11:
    runs-on: ubuntu-18.04
    env:
      CC: clang-9
      CXX: clang++-9
    steps:
      - uses: actions/checkout@v2
      - uses: ros-tooling/setup-ros@v0.3
        with:
          required-ros-distributions: melodic
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get install -y libsdl2-dev clang-9 libfreetype6-dev libvulkan-dev freeglut3-dev libxrandr-dev libglfw3-dev
      - name: Install the superbuild
        run: |
          mkdir .cmake-build-superbuild && cd .cmake-build-superbuild
          cmake ../superbuild -DWITH_VIZ3D=OFF
          cmake --build . --config Release
      - name: Install CT-ICP
        run: |
          mkdir cmake-build-release && cd cmake-build-release
          cmake .. -DCMAKE_BUILD_TYPE=Release -DWITH_VIZ3D=OFF
          cmake --build . --target install --config Release --parallel 12
      - name: Install ROSCore
        run: |
          cd ros/roscore
          mkdir cmake-build-release && cd  cmake-build-release
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target install --config Release --parallel 12
      - name: Run Tests
        run: |
          ./install/CT_ICP/test/all_tests
  
  
  dev-linux-noros-with-viz3d-ubuntu-20-gcc11:
    runs-on: ubuntu-20.04
    env:
      CC: clang-9
      CXX: clang++-9
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get install -y libsdl2-dev clang-9 libfreetype6-dev libvulkan-dev freeglut3-dev libxrandr-dev libglfw3-dev
      - name: Install the superbuild
        run: |
          mkdir .cmake-build-superbuild && cd .cmake-build-superbuild
          cmake ../superbuild -DWITH_VIZ3D=ON
          cmake --build . --config Release
      - name: Install CT-ICP
        run: |
          mkdir cmake-build-release && cd cmake-build-release
          cmake .. -DCMAKE_BUILD_TYPE=Release -DWITH_VIZ3D=ON
          cmake --build . --target install --config Release --parallel 12
      - name: Run Tests
        run: |
          ./install/CT_ICP/test/all_tests
